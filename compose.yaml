# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  core_service:
    build:
      context: ./ar.edu.uade.core
    image: matiasfelau/core-image
    env_file:
      - .env
    container_name: core-container
    volumes:
      - core_data:/core_data
    ports:
      - "8000:8000"
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    command: ["wait-for-it.sh", "rabbitmq:5672", "--", "gunicorn", "app:app", "--bind=0.0.0.0:8000"]  # Usa wait-for-it para esperar a RabbitMQ

  core_interface:
    image: tm2003/squad1front:1.1
    container_name: core-interface
    env_file:
      - .env
    ports:
      - "3002:3002"
    environment:
      - GRAFANA_URL=http://grafana:3000

  core_proxy:
    image: tm2003/squad1proxy:tag
    container_name: core-proxy
    ports:
      - "3001:3001"

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"  # Puerto para RabbitMQ (AMQP)
      - "15672:15672" # Puerto para la interfaz de administración (opcional)
      - "15692:15692"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf  # Archivo de configuración
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000" # Puerto Grafana
    volumes:
      - grafana_data:/var/lib/grafana

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  rabbitmq-exporter:
    image: kbudde/rabbitmq-exporter
    environment:
      RABBITMQ_URL: http://rabbitmq:15672/
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
    ports:
      - "9419:9419"    # RabbitMQ Exporter para Prometheus

volumes:
  core_data:
    external: true
  grafana_data:
    external: true
  prometheus_data:
    external: true
  rabbitmq_data:
    external: true
